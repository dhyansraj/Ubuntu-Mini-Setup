- name: Check if pyenv exists
  stat:
    path: "~/.pyenv/bin/pyenv"
  register: pyenv_exists
  ignore_errors: yes
  become: no

- name: Install and Configure pyenv
  block:
    - name: Install Dependancies
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libffi-dev
          - liblzma-dev
          - python-openssl

    - name: Clone pyenv repo
      git:
        repo: "https://github.com/pyenv/pyenv.git"
        dest: "~/.pyenv"
        version: master
        force: yes
      become: no

    - name: Clone pyenv-virtualenv repo
      git:
        repo: "https://github.com/pyenv/pyenv-virtualenv.git"
        dest: "~/.pyenv/plugins/pyenv-virtualenv"
        version: master
        force: yes
      become: no

    - name: Update bashrc pyenv
      lineinfile:
        dest: ~/.bashrc
        line: "{{ item }}"
      become: no
      with_items:
        - 'export PYENV_ROOT="$HOME/.pyenv"'
        - 'export PATH="$PYENV_ROOT/bin:$PATH"'
        - 'if command -v pyenv 1>/dev/null 2>&1; then'
        - '    eval "$(pyenv init -)"'
        - '    eval "$(pyenv virtualenv-init -)"'
        - 'fi # END OF pyenv SETUP'

    - name: Get Python version
      command: "python3 --version"
      register: python_version

    - name: Init Python 3.6 venv
      shell: "{{ item }}"
      args:
        executable: /bin/bash
      environment:
        PATH: '~/.pyenv/bin:{{ ansible_env.PATH }}'
      vars:
        pv: "3.6.10"
      become: no
      with_items:
        - "pyenv install {{ pv }}"
        - "pyenv virtualenv {{ pv }} venv_default"
  when: not pyenv_exists.stat.exists
